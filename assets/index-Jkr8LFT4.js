var m=Object.defineProperty;var p=(t,e,n)=>e in t?m(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n;var c=(t,e,n)=>p(t,typeof e!="symbol"?e+"":e,n);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))l(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&l(i)}).observe(document,{childList:!0,subtree:!0});function n(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function l(r){if(r.ep)return;r.ep=!0;const o=n(r);fetch(r.href,o)}})();class u{constructor(e){c(this,"rules");if(!e||typeof e!="object"||Object.keys(e).length===0)throw new Error("Configuration must be a non-empty object");this.rules={};for(const[n,l]of Object.entries(e))if(Array.isArray(l)){if(l.length===0)throw new Error(`Validator array for field ${n} should not be empty`);this.rules[n]=this.composeValidators(l)}else if(typeof l=="function")this.rules[n]=l;else throw new Error(`Invalid validator for field: ${n}`)}validate(e){const n={};for(const[l,r]of Object.entries(e)){const o=this.rules[l];if(o){const i=o(r);i&&(n[l]=i)}}return Object.keys(n).length>0?n:null}composeValidators(e){return n=>{const l={};for(const r of e){const o=r(n);o&&Object.assign(l,o)}return Object.keys(l).length>0?l:null}}}const h=t=>t.length?null:{nonEmptyArray:!0},s=t=>t.trim().length?null:{requiredText:!0},d=t=>e=>e.length<=t?null:{maxLength:{limitLength:t,actualLength:e.length}},y=t=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)?null:{email:"Invalid email address"},g=t=>/^\+?\d{10,15}$/.test(t)?null:{phoneNumber:"Invalid phone number"},b=t=>/^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[0-2])\.\d{4}$/.test(t)?null:{date:"Invalid date format, use DD.MM.YYYY"},v=new u({field1:h,field2:s,field3:[s,d(10)],field4:[s,d(20)]}),O={field1:["field1","field1"],field2:"field2",field3:"field3",field4:"field4"},x=v.validate(O);console.log(x);const L=new u({email:y,phoneNumber:g,date:b});document.addEventListener("DOMContentLoaded",()=>{const t=document.querySelector("form");t.addEventListener("submit",e=>{e.preventDefault();const n={email:t.querySelector('input[name="email"]').value,phoneNumber:t.querySelector('input[name="phoneNumber"]').value,date:t.querySelector('input[name="date"]').value},l=L.validate(n);console.log(l),t.querySelectorAll("input").forEach(r=>{r.classList.remove("error");const o=r.nextElementSibling;o&&(o.textContent="")}),l&&Object.entries(l).forEach(([r,o])=>{const i=t.querySelector(`input[name="${r}"]`);if(i&&o){i.classList.add("error");const f=Object.values(o).join(", "),a=i.nextElementSibling;a&&(a.textContent=f)}})})});
